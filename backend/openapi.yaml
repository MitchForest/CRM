openapi: 3.0.0
info:
  title: Sassy CRM API
  description: Modern headless CRM API for software sales teams
  version: 1.0.0
  contact:
    name: API Support
    email: support@sassycrm.com
servers:
  - url: http://localhost:8080/api
    description: Development server
  - url: https://api.sassycrm.com/api
    description: Production server
security:
  - bearerAuth: []
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      description: Authenticate with email/username and password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: admin@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        200:
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  expires_in:
                    type: integer
                  user:
                    $ref: '#/components/schemas/User'
        401:
          $ref: '#/components/responses/Unauthorized'
  
  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
      responses:
        200:
          description: Token refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer
        401:
          $ref: '#/components/responses/Unauthorized'
  
  /crm/leads:
    get:
      tags:
        - Leads
      summary: List leads
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - name: status
          in: query
          schema:
            type: string
            enum: [new, contacted, qualified, unqualified, converted]
        - name: assigned_user_id
          in: query
          schema:
            type: string
            format: uuid
        - name: search
          in: query
          schema:
            type: string
      responses:
        200:
          description: List of leads
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lead'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        401:
          $ref: '#/components/responses/Unauthorized'
    
    post:
      tags:
        - Leads
      summary: Create lead
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadInput'
      responses:
        201:
          description: Lead created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                  message:
                    type: string
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
  
  /crm/leads/{id}:
    get:
      tags:
        - Leads
      summary: Get lead details
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Lead details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Lead'
        404:
          $ref: '#/components/responses/NotFound'
    
    put:
      tags:
        - Leads
      summary: Update lead
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadInput'
      responses:
        200:
          description: Lead updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          $ref: '#/components/responses/NotFound'
    
    delete:
      tags:
        - Leads
      summary: Delete lead
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Lead deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          $ref: '#/components/responses/NotFound'
  
  /crm/opportunities:
    get:
      tags:
        - Opportunities
      summary: List opportunities
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - name: sales_stage
          in: query
          schema:
            type: string
        - name: assigned_user_id
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: List of opportunities
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Opportunity'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
  
  /crm/contacts:
    get:
      tags:
        - Contacts
      summary: List contacts
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - name: search
          in: query
          schema:
            type: string
      responses:
        200:
          description: List of contacts
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contact'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
  
  /crm/cases:
    get:
      tags:
        - Cases
      summary: List support cases
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - name: status
          in: query
          schema:
            type: string
            enum: [new, assigned, closed, pending_input, rejected]
        - name: priority
          in: query
          schema:
            type: string
            enum: [P1, P2, P3]
      responses:
        200:
          description: List of cases
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SupportCase'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    page:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
        default: 1
    limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
  
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              errors:
                type: object
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Unauthorized
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Resource not found
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email1:
          type: string
          format: email
        phone_work:
          type: string
        status:
          type: string
          enum: [active, inactive]
        last_login:
          type: string
          format: date-time
    
    Lead:
      type: object
      properties:
        id:
          type: string
          format: uuid
        first_name:
          type: string
        last_name:
          type: string
        email1:
          type: string
          format: email
        email2:
          type: string
          format: email
        phone_work:
          type: string
        phone_mobile:
          type: string
        phone_home:
          type: string
        phone_other:
          type: string
        phone_fax:
          type: string
        title:
          type: string
        department:
          type: string
        account_name:
          type: string
        website:
          type: string
        lead_source:
          type: string
        lead_source_description:
          type: string
        status:
          type: string
          enum: [new, contacted, qualified, unqualified, converted]
        status_description:
          type: string
        description:
          type: string
        assigned_user_id:
          type: string
          format: uuid
        date_entered:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
        ai_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
    
    LeadInput:
      type: object
      required:
        - last_name
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email1:
          type: string
          format: email
        email2:
          type: string
          format: email
        phone_work:
          type: string
        phone_mobile:
          type: string
        phone_home:
          type: string
        phone_other:
          type: string
        phone_fax:
          type: string
        title:
          type: string
        department:
          type: string
        account_name:
          type: string
        website:
          type: string
        lead_source:
          type: string
        lead_source_description:
          type: string
        status:
          type: string
          enum: [new, contacted, qualified, unqualified, converted]
        status_description:
          type: string
        description:
          type: string
        assigned_user_id:
          type: string
          format: uuid
    
    Opportunity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        opportunity_type:
          type: string
        account_id:
          type: string
          format: uuid
        campaign_id:
          type: string
          format: uuid
        lead_source:
          type: string
        amount:
          type: number
          format: float
        amount_usdollar:
          type: number
          format: float
        currency_id:
          type: string
        date_closed:
          type: string
          format: date
        next_step:
          type: string
        sales_stage:
          type: string
        probability:
          type: integer
          minimum: 0
          maximum: 100
        description:
          type: string
        assigned_user_id:
          type: string
          format: uuid
        date_entered:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
    
    Contact:
      type: object
      properties:
        id:
          type: string
          format: uuid
        first_name:
          type: string
        last_name:
          type: string
        email1:
          type: string
          format: email
        email2:
          type: string
          format: email
        phone_work:
          type: string
        phone_mobile:
          type: string
        phone_home:
          type: string
        phone_other:
          type: string
        phone_fax:
          type: string
        title:
          type: string
        department:
          type: string
        account_id:
          type: string
          format: uuid
        lead_source:
          type: string
        description:
          type: string
        assigned_user_id:
          type: string
          format: uuid
        date_entered:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
    
    SupportCase:
      type: object
      properties:
        id:
          type: string
          format: uuid
        case_number:
          type: integer
        name:
          type: string
        type:
          type: string
        status:
          type: string
          enum: [new, assigned, closed, pending_input, rejected]
        priority:
          type: string
          enum: [P1, P2, P3]
        resolution:
          type: string
        description:
          type: string
        account_id:
          type: string
          format: uuid
        contact_id:
          type: string
          format: uuid
        assigned_user_id:
          type: string
          format: uuid
        date_entered:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
    
    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        total_pages:
          type: integer