services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    platform: linux/amd64
    container_name: sassycrm-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: suitecrm
      MYSQL_USER: suitecrm
      MYSQL_PASSWORD: suitecrm
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      timeout: 20s
      retries: 10
    networks:
      - sassycrm-network

  # Backend API (PHP + Apache)
  backend:
    build:
      context: ./docker/backend
      dockerfile: Dockerfile
    container_name: sassycrm-backend
    ports:
      - "8080:80"
    volumes:
      # Mount entire backend directory
      - ./backend:/var/www/html:rw
      # Exclude vendor directory to avoid conflicts
      - /var/www/html/vendor
    environment:
      DB_HOST: mysql
      DB_DATABASE: suitecrm
      DB_USERNAME: suitecrm
      DB_PASSWORD: suitecrm
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      APP_DEBUG: "true"
      CORS_ALLOWED_ORIGINS: "http://localhost:3000,http://localhost:5173"
    depends_on:
      mysql:
        condition: service_healthy
    working_dir: /var/www/html
    command: >
      bash -c "
        composer install --no-interaction --optimize-autoloader &&
        mkdir -p /var/www/html/storage/{logs,cache} &&
        chown -R www-data:www-data /var/www/html/storage &&
        chmod -R 775 /var/www/html/storage &&
        apache2-foreground
      "
    networks:
      - sassycrm-network
    restart: unless-stopped

  # React Frontend (commented out for now)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: sassycrm-frontend
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app:rw
  #     - /app/node_modules
  #   environment:
  #     VITE_API_URL: http://localhost:8080/api
  #   depends_on:
  #     - backend
  #   networks:
  #     - sassycrm-network
  #   restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: sassycrm-redis
    ports:
      - "6379:6379"
    networks:
      - sassycrm-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  sassycrm-network:
    driver: bridge